{
	"name": "PEquipmentArea",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ParquetDataSet",
						"type": "DatasetReference"
					},
					"name": "Equipment"
				},
				{
					"dataset": {
						"referenceName": "ParquetDataSet",
						"type": "DatasetReference"
					},
					"name": "Area"
				},
				{
					"dataset": {
						"referenceName": "ParquetDataSet",
						"type": "DatasetReference"
					},
					"name": "StandardTable"
				},
				{
					"dataset": {
						"referenceName": "SourceBlobDataSet",
						"type": "DatasetReference"
					},
					"name": "equipmentJSON"
				},
				{
					"dataset": {
						"referenceName": "SourceBlobDataSet",
						"type": "DatasetReference"
					},
					"name": "AreaJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetDataSet",
						"type": "DatasetReference"
					},
					"name": "mysink"
				}
			],
			"transformations": [
				{
					"name": "AreaStandardTable"
				},
				{
					"name": "join1"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Equipment",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> Area",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> StandardTable",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> equipmentJSON",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> AreaJSON",
				"StandardTable, MapDrifted1 union(byName: true,",
				"     partitionBy('hash', 1))~> AreaStandardTable",
				"StandardTable, MapDrifted1 join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"Area derive(index = toString(byName('index')),",
				"          bk_area = toString(byName('bk_area')),",
				"          Owner_SystemUID = toString(byName('Owner_SystemUID')),",
				"          Facility_SystemUID_UnitTree = toString(byName('Facility_SystemUID_UnitTree')),",
				"          Facility = toString(byName('Facility')),",
				"          Project = toString(byName('Project')),",
				"          Owner_SystemFullName = toString(byName('Owner_SystemFullName')),",
				"          SystemFullName = toString(byName('SystemFullName')),",
				"          Owner = toString(byName('Owner')),",
				"          Facility_SystemUID = toString(byName('Facility_SystemUID')),",
				"          Name = toString(byName('Name')),",
				"          SystemUID = toString(byName('SystemUID')),",
				"          IsDeleted = toLong(byName('IsDeleted')),",
				"          Description = toString(byName('Description')),",
				"          LocationType = toString(byName('LocationType')),",
				"          FabricationContractor = toString(byName('FabricationContractor'))) ~> MapDrifted1",
				"AreaStandardTable sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> mysink"
			]
		}
	}
}