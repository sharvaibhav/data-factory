{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "vaibhav-rg-df"
		},
		"BlobLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobLinkedService'"
		},
		"MySqlLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MySqlLinkedService'"
		},
		"TableLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TableLinkedService'"
		},
		"loggingservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'loggingservice'"
		},
		"SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "vaibhav-test.database.windows.net"
		},
		"SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "vaibhav"
		},
		"SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"BlobMovementPipelineTrigger_properties_BlobDataMovementPipeline_parameters_BlobDataMovementPipelineSinkFileName": {
			"type": "string",
			"defaultValue": "NA"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BlobLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"MySqlServerName": {
						"type": "String"
					},
					"MySqlDBName": {
						"type": "String"
					},
					"MySQLUserName": {
						"type": "String"
					},
					"MySQLPassword": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('MySqlLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TableLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('TableLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/loggingservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('loggingservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LargeIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "MemoryOptimized",
							"coreCount": 32,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSISIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "testing ssisIR",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"nodeSize": "Standard_D2_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 2
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('SSISIR_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinedSinkBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"joinedFileSync": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().joinedFileSync",
							"type": "Expression"
						},
						"container": "sink"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySQLTableDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlLinkedService",
					"type": "LinkedServiceReference",
					"parameters": {
						"MySqlServerName": {
							"value": "@dataset().datasetMySqlServerName",
							"type": "Expression"
						},
						"MySqlDBName": {
							"value": "@dataset().datasetMySqlDBName",
							"type": "Expression"
						},
						"MySQLUserName": {
							"value": "@dataset().datasetMySQLUserName",
							"type": "Expression"
						},
						"MySQLPassword": {
							"value": "@dataset().datasetMySQLPassword",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"datasetMySQLDbTableName": {
						"type": "String",
						"defaultValue": "equipment"
					},
					"datasetMySqlServerName": {
						"type": "String",
						"defaultValue": "vaibhav-adf-mysql-server.mysql.database.azure.com"
					},
					"datasetMySqlDBName": {
						"type": "String",
						"defaultValue": "dump"
					},
					"datasetMySQLUserName": {
						"type": "String",
						"defaultValue": "vaibhav@vaibhav-adf-mysql-server"
					},
					"datasetMySQLPassword": {
						"type": "String",
						"defaultValue": "Test1234"
					}
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().datasetMySQLDbTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkBlobDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sink"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceBlobDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobSourceFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BlobSourceFileName",
							"type": "Expression"
						},
						"container": "source"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TableStorageDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TableLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableStorageName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TableStorageName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TableLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobDataMovementPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blob Area Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameArea",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Blob System Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameSystem",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Blob Equipment Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameEquipment",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Blob Discipline Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameDiscipline",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BlobDataMovementPipelineSinkFileName": {
						"type": "String"
					},
					"BlobDataMovementPipelineSourceNameArea": {
						"type": "String",
						"defaultValue": "johancastberg-area-data.json"
					},
					"BlobDataMovementPipelineSourceNameEquipment": {
						"type": "String",
						"defaultValue": "johancastberg-equipments-data.json"
					},
					"BlobDataMovementPipelineSourceNameSystem": {
						"type": "String",
						"defaultValue": "johancastberg-system-data.json"
					},
					"BlobDataMovementPipelineSourceNameDiscipline": {
						"type": "String",
						"defaultValue": "johancastberg-discipline-data.json"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobDataSet')]",
				"[concat(variables('factoryId'), '/datasets/SinkBlobDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TableToSourceMYSqlTableMovementPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move Equipment Table to MySql Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TableStorageDataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableStorageName": {
										"value": "@pipeline().parameters.pipelineTableStorageNameEquipment",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MySQLTableDataSet",
								"type": "DatasetReference",
								"parameters": {
									"datasetMySQLDbTableName": {
										"value": "@pipeline().parameters.pipelineMySqlDbTableNameEquipment",
										"type": "Expression"
									},
									"datasetMySqlServerName": {
										"value": "@pipeline().parameters.pipelineMySqlServerName",
										"type": "Expression"
									},
									"datasetMySqlDBName": {
										"value": "@pipeline().parameters.pipelineMySqlDbName",
										"type": "Expression"
									},
									"datasetMySQLUserName": {
										"value": "@pipeline().parameters.pipelineMySqlUserName",
										"type": "Expression"
									},
									"datasetMySQLPassword": {
										"value": "@pipeline().parameters.pipelineMySqlPassword",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move Area Table to MySql Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TableStorageDataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableStorageName": {
										"value": "@pipeline().parameters.pipelineTableStorageNameArea",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MySQLTableDataSet",
								"type": "DatasetReference",
								"parameters": {
									"datasetMySQLDbTableName": {
										"value": "@pipeline().parameters.pipelineMySqlDbTableNameArea",
										"type": "Expression"
									},
									"datasetMySqlServerName": {
										"value": "@pipeline().parameters.pipelineMySqlServerName",
										"type": "Expression"
									},
									"datasetMySqlDBName": {
										"value": "@pipeline().parameters.pipelineMySqlDbName",
										"type": "Expression"
									},
									"datasetMySQLUserName": {
										"value": "@pipeline().parameters.pipelineMySqlUserName",
										"type": "Expression"
									},
									"datasetMySQLPassword": {
										"value": "@pipeline().parameters.pipelineMySqlPassword",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move System Table to MySql Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TableStorageDataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableStorageName": {
										"value": "@pipeline().parameters.pipelineTableStorageNameSystem",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "MySQLTableDataSet",
								"type": "DatasetReference",
								"parameters": {
									"datasetMySQLDbTableName": {
										"value": "@pipeline().parameters.pipelineMySqlDbTableNameSystem",
										"type": "Expression"
									},
									"datasetMySqlServerName": {
										"value": "@pipeline().parameters.pipelineMySqlServerName",
										"type": "Expression"
									},
									"datasetMySqlDBName": {
										"value": "@pipeline().parameters.pipelineMySqlDbName",
										"type": "Expression"
									},
									"datasetMySQLUserName": {
										"value": "@pipeline().parameters.pipelineMySqlUserName",
										"type": "Expression"
									},
									"datasetMySQLPassword": {
										"value": "@pipeline().parameters.pipelineMySqlPassword",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pipelineTableStorageNameEquipment": {
						"type": "String",
						"defaultValue": "equipments"
					},
					"pipelineMySqlDbTableNameEquipment": {
						"type": "String",
						"defaultValue": "equipment"
					},
					"pipelineMySqlServerName": {
						"type": "String",
						"defaultValue": "vaibhav-adf-mysql-server.mysql.database.azure.com"
					},
					"pipelineMySqlDbName": {
						"type": "String",
						"defaultValue": "dump"
					},
					"pipelineMySqlUserName": {
						"type": "String",
						"defaultValue": "vaibhav@vaibhav-adf-mysql-server"
					},
					"pipelineMySqlPassword": {
						"type": "String",
						"defaultValue": "Test1234"
					},
					"pipelineTableStorageNameSystem": {
						"type": "string",
						"defaultValue": "system"
					},
					"pipelineMySqlDbTableNameSystem": {
						"type": "string",
						"defaultValue": "system"
					},
					"pipelineTableStorageNameArea": {
						"type": "string",
						"defaultValue": "area"
					},
					"pipelineMySqlDbTableNameArea": {
						"type": "string",
						"defaultValue": "area"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TableStorageDataSet')]",
				"[concat(variables('factoryId'), '/datasets/MySQLTableDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/equipmentAndAreaDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference"
							},
							"name": "Area"
						},
						{
							"dataset": {
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference"
							},
							"name": "Equipment"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "JoinedSinkBlobStorage",
								"type": "DatasetReference"
							},
							"name": "JoinedJsonEquipmentAndArea"
						}
					],
					"transformations": [
						{
							"name": "EquipmentToAreaJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          areaCode as string,",
						"          description as string,",
						"          ext_id as string,",
						"          fabricationContractor as string,",
						"          facility as string,",
						"          id as string,",
						"          locationType as string,",
						"          project as string,",
						"          systemFullName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     partitionBy('hash', 1)) ~> Area",
						"source(output(",
						"          area as string,",
						"          attributes as (id as string)[],",
						"          description as string,",
						"          discipline as string,",
						"          facility as string,",
						"          id as string,",
						"          processLine as string,",
						"          procurementPackage as string,",
						"          relations as (id as string)[],",
						"          system as string,",
						"          tagNumber as string,",
						"          topTag as string,",
						"          type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     partitionBy('hash', 1)) ~> Equipment",
						"Equipment, Area join(area == Area@id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     partitionBy('hash', 1),",
						"     broadcast: 'auto')~> EquipmentToAreaJoin",
						"EquipmentToAreaJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          {Equipment Description} = Equipment@description,",
						"          tagNumber,",
						"          areaCode,",
						"          {Area Description} = Area@description,",
						"          project",
						"     )) ~> JoinedJsonEquipmentAndArea"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobDataSet')]",
				"[concat(variables('factoryId'), '/datasets/JoinedSinkBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobToTableToMySqlTablesMovement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move Area Blob To Tables storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureTableSink",
								"azureTableInsertType": "merge",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.PipelineBlobSourceFileNameArea",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TableStorageDataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableStorageName": {
										"value": "@pipeline().parameters.PipelineTableNameArea",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move Discipline Blob To Tables storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureTableSink",
								"azureTableInsertType": "merge",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.PipelineBlobSourceFileNameDiscipline",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TableStorageDataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableStorageName": {
										"value": "@pipeline().parameters.PipelineTableNameDiscipline",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move Equipment Blob To Tables storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureTableSink",
								"azureTableInsertType": "merge",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tagNumber']"
										},
										"sink": {
											"name": "tagNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['relations']"
										},
										"sink": {
											"name": "relations"
										}
									},
									{
										"source": {
											"path": "$['facility']"
										},
										"sink": {
											"name": "facility",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['area']"
										},
										"sink": {
											"name": "area",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['system']"
										},
										"sink": {
											"name": "system",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['discipline']"
										},
										"sink": {
											"name": "discipline",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['procurementPackage']"
										},
										"sink": {
											"name": "procurementPackage",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['processLine']"
										},
										"sink": {
											"name": "processLine",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['topTag']"
										},
										"sink": {
											"name": "topTag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['attributes']"
										},
										"sink": {
											"name": "attributes"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.PipelineBlobSourceFileNameEquipment",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TableStorageDataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableStorageName": {
										"value": "@pipeline().parameters.PipelineTableNameEquipment",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move System Blob To Tables storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureTableSink",
								"azureTableInsertType": "merge",
								"writeBatchSize": 10000
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.PipelineBlobSourceFileNameSystem",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TableStorageDataSet",
								"type": "DatasetReference",
								"parameters": {
									"TableStorageName": {
										"value": "@pipeline().parameters.PipelineTableNameSystem",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Movement from Table to MySql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Move Area Blob To Tables storage",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Move Discipline Blob To Tables storage",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Move Equipment Blob To Tables storage",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Move System Blob To Tables storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TableToSourceMYSqlTableMovementPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineTableStorageNameEquipment": {
									"value": "@pipeline().parameters.PipelineTableNameEquipment",
									"type": "Expression"
								},
								"pipelineTableStorageNameSystem": {
									"value": "@pipeline().parameters.PipelineTableNameSystem",
									"type": "Expression"
								},
								"pipelineTableStorageNameArea": {
									"value": "@pipeline().parameters.PipelineTableNameArea",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PipelineBlobSourceFileNameArea": {
						"type": "string",
						"defaultValue": "johancastberg-area-data.json"
					},
					"PipelineBlobSourceFileNameSystem": {
						"type": "string",
						"defaultValue": "johancastberg-system-data.json"
					},
					"PipelineBlobSourceFileNameEquipment": {
						"type": "string",
						"defaultValue": "johancastberg-equipments-data.json"
					},
					"PipelineBlobSourceFileNameDiscipline": {
						"type": "string",
						"defaultValue": "johancastberg-discipline-data.json"
					},
					"PipelineTableNameArea": {
						"type": "string",
						"defaultValue": "Tarea"
					},
					"PipelineTableNameSystem": {
						"type": "string",
						"defaultValue": "Tsystem"
					},
					"PipelineTableNameEquipment": {
						"type": "string",
						"defaultValue": "Tequipment"
					},
					"PipelineTableNameDiscipline": {
						"type": "string",
						"defaultValue": "Tdiscipline"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobDataSet')]",
				"[concat(variables('factoryId'), '/datasets/TableStorageDataSet')]",
				"[concat(variables('factoryId'), '/pipelines/TableToSourceMYSqlTableMovementPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Comined Blob and Table movement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blob Area Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameArea",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Blob System Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameSystem",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Blob Equipment Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameEquipment",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Blob Discipline Data Movement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DESCRIPTION",
								"value": "Blob data movement between source and sync."
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceBlobDataSet",
								"type": "DatasetReference",
								"parameters": {
									"BlobSourceFileName": {
										"value": "@pipeline().parameters.BlobDataMovementPipelineSourceNameDiscipline",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkBlobDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Move Tabl storage to MySql tables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Blob Area Data Movement",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Blob System Data Movement",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Blob Equipment Data Movement",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Blob Discipline Data Movement",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TableToSourceMYSqlTableMovementPipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pipelineTableStorageNameEquipment": {
									"value": "@pipeline().parameters.CombinedPipelineTableStorageNameEquipment",
									"type": "Expression"
								},
								"pipelineMySqlDbTableNameEquipment": {
									"value": "@pipeline().parameters.CombinedPipelineMySqlDbTableNameEquipment",
									"type": "Expression"
								},
								"pipelineMySqlServerName": {
									"value": "@pipeline().parameters.CombinedPipelineMySqlServerName",
									"type": "Expression"
								},
								"pipelineMySqlDbName": {
									"value": "@pipeline().parameters.CombinedPipelineMySqlDbName",
									"type": "Expression"
								},
								"pipelineMySqlUserName": {
									"value": "@pipeline().parameters.CombinedPipelineMySqlUserName",
									"type": "Expression"
								},
								"pipelineMySqlPassword": {
									"value": "@pipeline().parameters.CombinedPipelineMySqlPassword",
									"type": "Expression"
								},
								"pipelineTableStorageNameSystem": {
									"value": "@pipeline().parameters.CombinedPipelineTableStorageNameSystem",
									"type": "Expression"
								},
								"pipelineMySqlDbTableNameSystem": {
									"value": "@pipeline().parameters.CombinedPipelineMySqlDbTableNameSystem",
									"type": "Expression"
								},
								"pipelineTableStorageNameArea": {
									"value": "@pipeline().parameters.CombinedPipelineTableStorageNameArea",
									"type": "Expression"
								},
								"pipelineMySqlDbTableNameArea": {
									"value": "@pipeline().parameters.CombinedPipelineMySqlDbTableNameArea",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BlobDataMovementPipelineSinkFileName": {
						"type": "String"
					},
					"BlobDataMovementPipelineSourceNameArea": {
						"type": "String",
						"defaultValue": "johancastberg-area-data.json"
					},
					"BlobDataMovementPipelineSourceNameEquipment": {
						"type": "String",
						"defaultValue": "johancastberg-equipments-data.json"
					},
					"BlobDataMovementPipelineSourceNameSystem": {
						"type": "String",
						"defaultValue": "johancastberg-system-data.json"
					},
					"BlobDataMovementPipelineSourceNameDiscipline": {
						"type": "String",
						"defaultValue": "johancastberg-discipline-data.json"
					},
					"CombinedPipelineTableStorageNameEquipment": {
						"type": "string",
						"defaultValue": "equipments"
					},
					"CombinedPipelineMySqlDbTableNameEquipment": {
						"type": "string",
						"defaultValue": "equipment"
					},
					"CombinedPipelineMySqlServerName": {
						"type": "string",
						"defaultValue": "vaibhav-adf-mysql-server.mysql.database.azure.com"
					},
					"CombinedPipelineMySqlDbName": {
						"type": "string",
						"defaultValue": "dump"
					},
					"CombinedPipelineMySqlUserName": {
						"type": "string",
						"defaultValue": "vaibhav@vaibhav-adf-mysql-server"
					},
					"CombinedPipelineMySqlPassword": {
						"type": "string",
						"defaultValue": "Test1234"
					},
					"CombinedPipelineTableStorageNameSystem": {
						"type": "string",
						"defaultValue": "system"
					},
					"CombinedPipelineMySqlDbTableNameSystem": {
						"type": "string",
						"defaultValue": "system"
					},
					"CombinedPipelineTableStorageNameArea": {
						"type": "string",
						"defaultValue": "area"
					},
					"CombinedPipelineMySqlDbTableNameArea": {
						"type": "string",
						"defaultValue": "area"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceBlobDataSet')]",
				"[concat(variables('factoryId'), '/datasets/SinkBlobDataSet')]",
				"[concat(variables('factoryId'), '/pipelines/TableToSourceMYSqlTableMovementPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testEquipmentAreaPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EquipmentAreaDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "equipmentAndAreaDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Area": {
										"BlobSourceFileName": "johancastberg-area-data.json"
									},
									"Equipment": {
										"BlobSourceFileName": "johancastberg-equipments-data.json"
									},
									"JoinedJsonEquipmentAndArea": {
										"joinedFileSync": "joined-equipment-area"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "LargeIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Coarse",
							"runConcurrently": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/equipmentAndAreaDataFlow')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/LargeIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobMovementPipelineTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "BlobDataMovementPipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"BlobDataMovementPipelineSinkFileName": "[parameters('BlobMovementPipelineTrigger_properties_BlobDataMovementPipeline_parameters_BlobDataMovementPipelineSinkFileName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-07-29T13:39:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/BlobDataMovementPipeline')]"
			]
		}
	]
}